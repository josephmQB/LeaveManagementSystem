@model LeaveManagementSystem.ViewModel.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<div class="my-5">
    <div class="row justify-content-center align-items-center">
        <div class="card col-sm-6">
            <h1 class="card-title text-center mt-4">Registration</h1>
            <div class="card-body">
                <form action="/account/register" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                        <div class="form-group mr-3">
                            <label for="txtName">Name</label>
                            <input type="text" class="form-control" id="txtName" placeholder="Enter name" name="Name"  autofocus="autofocus" />
                            @Html.ValidationMessageFor(temp => temp.Name) 
                        </div>
                        <div class="form-group mr-3">
                            <label for="txtEmail">Email</label>
                            <input type="email" class="form-control" id="txtEmail" placeholder="Email" name="Email" />
                            @Html.ValidationMessageFor(temp => temp.Email)
                        </div>
                        <div class="form-group mr-3">
                            <label for="txtMobile">Mobile</label>
                            <input type="text" class="form-control" id="txtMobile" placeholder="Mobile" name="Phone" pattern="^[789]\d{9}$" />
                        </div>
                    <div class="form-row mr-3">
                        <div class="form-group col-sm-6">
                            <label for="txtPassword">Password</label>
                            <input type="password" class="form-control" id="txtPassword" placeholder="Password" name="Password" minlength="6" oninput="form.ConfirmPassword.pattern = escapeRegExp(this.value)" />
                            @Html.ValidationMessageFor(temp => temp.Password)
                        </div>
                        <div class="form-group col-sm-6">
                            <label for="txtPassword">Confirm Password</label>
                            <input type="password" class="form-control" id="txtConfirmPassword" placeholder="Confirm Password" name="ConfirmPassword" />
                            @Html.ValidationMessageFor(temp => temp.ConfirmPassword)
                        </div>
                    </div>
                        <div class="form-group mr-3">
                            <label for="Image">User Image</label>
                            @{Html.RenderPartial("UserImgUpload"); }
                        </div>
                    @Html.ValidationSummary()
                <div class="form-row justify-content-center align-items-center">
                    <div class="form-group ">
                        <button type="submit" class="btn btn-primary align-items-center mt-4">Register</button>
                    </div>
                </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        $("#txtName").blur(function () {
            let pattern = new RegExp('^[a-zA-Z ]+$');
            let space = new RegExp('^[ ]+$');
            var item = $("#txtName").next();
            console.log(pattern.test(this.value));

            if (this.value.length == 0) {
                item.text("Enter your name");
            }
            else if (space.test(this.value)) {
                item.text("Enter your name");
            }
            else if (!pattern.test(this.value)) {
                console.log(item);
                item.text("Only alphabets are allowed");
            }
            else {
                item.text("");
            }
        });
        $("#txtEmail").blur(function () {
            @{
                string str = @"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,3}$";
            }
            let pattern = new RegExp('@str');
            let space = new RegExp('^[ ]+$');
            var item = $("#txtEmail").next();
            console.log(pattern.test(this.value));

            if (this.value.length == 0) {
                item.text("Enter your Email");
            }
            else if (space.test(this.value)) {
                item.text("Enter your email");
            }
            else if (!pattern.test(this.value)) {
                console.log(item);
                item.text("Enter valid Email");
            }
            else {
                //$.ajax({
                //    url: "/api/account?email=" + this.value, type: "GET", success:
                //        function (response) {
                //            if (response == "Not Found") {
                //                item.text("");
                //            }
                //            else {
                //                item.text("Email already registered");
                //            }
                //        },
                //    error: function () {
                //        item.text("Error occurred");
                //    }
                //});
                //$.get("/api/account?email="+this.value, function (data) {
                //    alert("Data Loaded: " + data);
                //});
                item.text("");
            }
        });
    });
</script>
